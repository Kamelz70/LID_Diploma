
Allocating common symbols
Common symbol       size              file

stack               0x400             startup.o

Memory Configuration

Name             Origin             Length             Attributes
flash            0x00000000         0x20000000         xr
sram             0x20000000         0x20000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map


.text           0x00000000      0x130
 *(.vectors*)
 .vectors       0x00000000       0x10 startup.o
                0x00000000                g_p_f_vectors
 *(.text*)
 .text          0x00000010       0x90 startup.o
                0x00000010                H_fault_Handler
                0x00000010                Default_Handler
                0x00000010                NMI_Handler
                0x0000001c                Reset_Handler
 .text          0x000000a0       0x90 main.o
                0x000000a0                main
 *(.rodata)
                0x00000130                _E_text = .

.glue_7         0x00000130        0x0
 .glue_7        0x00000130        0x0 linker stubs

.glue_7t        0x00000130        0x0
 .glue_7t       0x00000130        0x0 linker stubs

.vfp11_veneer   0x00000130        0x0
 .vfp11_veneer  0x00000130        0x0 linker stubs

.v4_bx          0x00000130        0x0
 .v4_bx         0x00000130        0x0 linker stubs

.iplt           0x00000130        0x0
 .iplt          0x00000130        0x0 startup.o

.rel.dyn        0x00000130        0x0
 .rel.iplt      0x00000130        0x0 startup.o

.data           0x20000000        0x0 load address 0x00000130
                0x20000000                _S_DATA = .
 *(.data)
 .data          0x20000000        0x0 startup.o
 .data          0x20000000        0x0 main.o
                0x20000000                _E_DATA = .

.igot.plt       0x20000000        0x0 load address 0x00000130
 .igot.plt      0x20000000        0x0 startup.o

.bss            0x20000000     0x1400 load address 0x00000130
                0x20000000                _S_bss = .
 *(.bss*)
 .bss           0x20000000        0x0 startup.o
 .bss           0x20000000        0x0 main.o
                0x20000000                . = ALIGN (0x4)
                0x20000000                _E_bss = .
                0x20001000                . = (. + 0x1000)
 *fill*         0x20000000     0x1000 
 COMMON         0x20001000      0x400 startup.o
                0x20001000                stack
LOAD startup.o
LOAD main.o
OUTPUT(Lab3.elf elf32-littlearm)

.debug_info     0x00000000      0x1f5
 .debug_info    0x00000000      0x18f startup.o
 .debug_info    0x0000018f       0x66 main.o

.debug_abbrev   0x00000000      0x125
 .debug_abbrev  0x00000000       0xc9 startup.o
 .debug_abbrev  0x000000c9       0x5c main.o

.debug_loc      0x00000000       0xb4
 .debug_loc     0x00000000       0x7c startup.o
 .debug_loc     0x0000007c       0x38 main.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 startup.o
 .debug_aranges
                0x00000020       0x20 main.o

.debug_line     0x00000000       0xcc
 .debug_line    0x00000000       0x69 startup.o
 .debug_line    0x00000069       0x63 main.o

.debug_str      0x00000000      0x1a0
 .debug_str     0x00000000      0x186 startup.o
                                0x1ba (size before relaxing)
 .debug_str     0x00000186       0x1a main.o
                                 0xe1 (size before relaxing)

.comment        0x00000000       0x7e
 .comment       0x00000000       0x7e startup.o
                                 0x7f (size before relaxing)
 .comment       0x0000007e       0x7f main.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 startup.o
 .ARM.attributes
                0x00000033       0x33 main.o

.debug_frame    0x00000000       0x7c
 .debug_frame   0x00000000       0x50 startup.o
 .debug_frame   0x00000050       0x2c main.o
